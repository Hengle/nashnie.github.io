---
layout: post
title:  "大地形程序化植被生成方案"
date:   2019-9-16 13:50:00 +0800
categories: none
---
## 大地形程序化植被生成方案

手游品质越来越高，大地形的游戏越来越多，人力生成植被越来越满足不了策划日渐膨胀的内心，程序化的植被生成技术就运用到项目里来了，所以“策划推动技术发展”……<br>
这项技术具体要解决什么样的策划需求呢？<br>
上图，大地形环境下的大自然地貌。<br>
再细分一下需求。<br>
不同地形，比如高度、温度、湿度、阳光甚至经纬度等决定了植被的生长，同时植被在斜坡上有比较规律但是又有一些随机的朝向，有不同密度，有不同的树龄等等。<br>
我们细化这些表现需求之后，得出具体要实现的细节。<br>
1. 如何定义区域；
2. 如何定义植被生长区域；
3. 如何决定植被密度；
4. 如何决定植被缩放(树龄)；
5. 如何决定植被旋转；

<br>
一个大的方案细化之后好像也没那么复杂了。<br>
我们学习了育碧 FarCry5 分享的植被技术方案，受益良多，感谢育碧 FarCry5 团队。<br>
育碧团队使用 Houdini 引擎结合游戏引擎的方案，导出一系列的坐标点也就是区域给游戏引擎使用。<br>
Houdini 使用美术同学给出的 Mask 贴图，比如Humidity、Flow、Slope、Curvature、Illumination 等等决定区域等，然后定义不同种类的植被以及植被在不同高度、不同光照下的生存能力 viability，这是概念非常启发我。<br>
有了 viability 之后，我们同时也知道大地图每一个点的属性，比如高度、湿度、温度等，我们可以很轻松就知道不同植被在这个点的 viability，然后存活能力强的植被就可以保留。<br>
感慨一句，我曾经被 UE 抽象的重要度概念 significance 惊讶到，这次育碧的存活能力 viability 同样。看上去复杂、模糊不清的问题一下子鲜明了。<br>
不过……<br>
Houdini 引擎和游戏引擎配合使用的工作流貌似对很多团队来说还是有点太硬核了。我们采用了折中方案，尤其是在我们的大地形还不是那么大的情况下(1kmx1km)。<br>
我们使用了游戏引擎内地形本身材质属性来决定植被的区域。比如草地、沙地、泥地等等。<br>
我们知道这些 layer 共同决定了地形 surface 的表现，那么我们可以通过获取地表点的某个属性占比属性来决定植被的生长，<br>
具体说比如椰子树喜欢在草地 layer 占比超过30%的区域生长，我们检测地表点 layer weight 符合条件就可以了，如果不同的植被都符合条件，加一个优先级就可以解决。<br>
我们的方案和 Houdini 方案劣势在哪里呢？<br>
在 layer 种类有限的情况下，不能表现出过于复杂的地表植被需求。layer 不够真实，比如陡璧，比如河边，比如山背等等。<br>
区域方案有了之后，我们接下来继续确定植被的密度、缩放、旋转。<br>

Rotation AlignToNormal 以及一部分随机等等<br>
Size Age 随机因素、边缘因素（Mask）、生存能力以及全局百分比控制（The right size is assigned at the right place based on viability.）<br>
Density 针对每一种植被，正太分布等<br>
未完待续...<br>